# NI System Web server configuration file.
#
# Global Directives
#
ErrorLog RTWebServer.log, backup=1, size=10K

LoadModulePath ".:./..:./modules"

LoadModule niConfModule mod_niconf
NI.Conf.LoadINI NISystemWebServer.ini

LoadModule niSessionManagerModule mod_nisessmgr
LoadModule niAuthModule mod_niauth
LoadModule EspModule mod_niesp
LoadModule WSRuntime ws_runtime

<NI.Conf.IfAnyHost SSLEnabled>
  LoadModule niSslInitModule mod_nissl
  LoadModule sslModule mod_ssl
</NI.Conf.IfAnyHost>

<NI.Conf.IfCurrentHost DAVEnabled>
  LoadModule niWebDavModule mod_nidav
</NI.Conf.IfCurrentHost>

NI.Conf.Listen

#
# Directives that apply to the default server
#
NI.ServerName "NI System Web Server"
InactivityTimeout 60
LimitRequestBody 50000000
LimitRequestForm 50000000
LimitUrl 1024
ThreadStack 64K
WorkerLimit 10

DocumentRoot "./../www"
DirectoryIndex WIF.html
TypesConfig mime.types

#
# Pipeline Definition
#
SetConnector netConnector

AddHandler niAuthHandler
AddHandler WSRuntime
<NI.Conf.IfCurrentHost DAVEnabled>
    AddHandler niWebDavOptionsHandler
</NI.Conf.IfCurrentHost>
AddHandler fileHandler ""

AddOutputFilter chunkFilter

<NI.Conf.IfCurrentHost DAVEnabled>
  DAVOptions On

# Default route
  <Route ^/files(/|$)>
    DocumentRoot /
    Prefix /files
    DAV Files
    DAVOptions Off

    Options Indexes
    LimitRequestBody 0

    AuthName NIAuth
    AuthMethod NIAuth
    AuthType Digest
    AuthDigestQop auth

    Require valid-user
    NI.Auth.Require OPTIONS PROPFIND GET permission FSRead
    NI.Auth.Require PROPPATCH PUT MKCOL permission FSWrite
    NI.Auth.Require DELETE COPY MOVE LOCK UNLOCK permission FSRead FSWrite

    Reset pipeline
    AddHandler niAuthPermHandler
    AddHandler niWebDavHandler
    AddHandler fileHandler ""

    AddOutputFilter chunkFilter

    <Route ^/files/ni-rt/system/webserver(/|$)>
      Require group administrators
    </Route>
    <Route ^/files/ni-rt/system/niwebcer(/|$)>
      Require group administrators
    </Route>
  </Route>

# Pseudo-Drives route
  <Route ^/drives(/|$)>
    Prefix /drives
    DAV Drives
    DAVOptions Off
    NI.SkipPathInRouteDirCheck True

    Options Indexes
    LimitRequestBody 0

    AuthName NIAuth
    AuthMethod NIAuth
    AuthType Digest
    AuthDigestQop auth

    Require valid-user
    NI.Auth.Require OPTIONS PROPFIND GET permission FSRead
    NI.Auth.Require PROPPATCH PUT MKCOL permission FSWrite
    NI.Auth.Require DELETE COPY MOVE LOCK UNLOCK permission FSRead FSWrite

    Reset pipeline
    AddHandler niAuthPermHandler
    AddHandler niWebDavHandler
    AddHandler fileHandler ""

    AddOutputFilter chunkFilter
  </Route>
</NI.Conf.IfCurrentHost>

<NI.Conf.EachVirtualHost>
  <NI.Conf.IfCurrentHost SSLEnabled>
    SSLEngine on
    SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
    SSLProtocol ALL -SSLV2
    NI.Conf.ConfigureSSLCerts
  </NI.Conf.IfCurrentHost>

  NI.WSRuntime.Configuration system
</NI.Conf.EachVirtualHost>

